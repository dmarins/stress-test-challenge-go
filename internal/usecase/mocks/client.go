// Code generated by MockGen. DO NOT EDIT.
// Source: internal/infrastructure/http/client.go
//
// Generated by this command:
//
//	mockgen -source=internal/infrastructure/http/client.go -destination=internal/usecase/mocks/client.go -typed=true -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockHttpClientInterface is a mock of HttpClientInterface interface.
type MockHttpClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockHttpClientInterfaceMockRecorder
}

// MockHttpClientInterfaceMockRecorder is the mock recorder for MockHttpClientInterface.
type MockHttpClientInterfaceMockRecorder struct {
	mock *MockHttpClientInterface
}

// NewMockHttpClientInterface creates a new mock instance.
func NewMockHttpClientInterface(ctrl *gomock.Controller) *MockHttpClientInterface {
	mock := &MockHttpClientInterface{ctrl: ctrl}
	mock.recorder = &MockHttpClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHttpClientInterface) EXPECT() *MockHttpClientInterfaceMockRecorder {
	return m.recorder
}

// DoRequest mocks base method.
func (m *MockHttpClientInterface) DoRequest(url string) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DoRequest", url)
	ret0, _ := ret[0].(int)
	return ret0
}

// DoRequest indicates an expected call of DoRequest.
func (mr *MockHttpClientInterfaceMockRecorder) DoRequest(url any) *MockHttpClientInterfaceDoRequestCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoRequest", reflect.TypeOf((*MockHttpClientInterface)(nil).DoRequest), url)
	return &MockHttpClientInterfaceDoRequestCall{Call: call}
}

// MockHttpClientInterfaceDoRequestCall wrap *gomock.Call
type MockHttpClientInterfaceDoRequestCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockHttpClientInterfaceDoRequestCall) Return(arg0 int) *MockHttpClientInterfaceDoRequestCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockHttpClientInterfaceDoRequestCall) Do(f func(string) int) *MockHttpClientInterfaceDoRequestCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockHttpClientInterfaceDoRequestCall) DoAndReturn(f func(string) int) *MockHttpClientInterfaceDoRequestCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
